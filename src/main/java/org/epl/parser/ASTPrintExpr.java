package org.epl.parser;

/* Generated By:JJTree: Do not edit this line. ASTPrintExpr.java */

/**
 * Represents the PrintExpr production in the EPL grammar.
 * 
 * <pre>
 * PrintExpr ::= {@link ASTVarExpr VarExpr}
 *             | &lt;STRING&gt;
 * </pre>
 * @see ASTVarExpr
 */
public class ASTPrintExpr extends SimpleNode {
	String literalString;
	
  public ASTPrintExpr(int id) {
    super(id);
  }

  public ASTPrintExpr(EplParser p, int id) {
    super(p, id);
  }

  /**
   * Interpret the {@link ASTVarExpr} child node as a string value, or return the literal value of the
   * &lt;STRING&gt; terminal, minus the leading and trailing quote marks 
   * @return the String result of evaluating the child node
   */
  public String interpretAsString() {    			
    // the PrintExpr() production has either the single child VarExpr(), or a <STRING> terminal
    int i = jjtGetNumChildren();
    if (i > 0) {
      // Expr()
      return ((ASTVarExpr)jjtGetChild(0)).interpretAsString();	
    } else {
      // <STRING>  with leading and trailing quote removed 
      return (literalString.substring(1, literalString.length() - 1));
  }
  }

}
