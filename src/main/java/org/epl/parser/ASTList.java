package org.epl.parser;

import java.util.LinkedList;

import org.epl.core.Action;

/* Generated By:JJTree: Do not edit this line. ASTList.java */
/**
 * Represents the List production in the EPL grammar.
 * <pre>
 * List ::= {@link ASTVarExpr VarExpr} [ ( "," {@link ASTVarExpr VarExpr} )+ ]
 * </pre>
 */

public class ASTList extends SimpleNode implements Action {
	private LinkedList<Action> actions = new LinkedList<Action>();
	
  public ASTList(int id) {
    super(id);
  }

  public ASTList(EplParser p, int id) {
    super(p, id);
  }

	
	public void interpret() {
		super.interpret();
		// For each action in the list, we need to get the Action object
		// associated with it and store it.
		for (int i=0; i<jjtGetNumChildren(); i++) {
			ASTVarExpr actionVar = (ASTVarExpr) jjtGetChild(i);
			Action action = (Action) bus.actions.get(actionVar.name);
			// In case they put something in the list that's not an action
			if (action == null) {
				throw new RuntimeException("Invalid action in situation statement: " + actionVar.name);
			}
			actions.add(action);
		}
	}

	
	public void execute() {
		// Cycle through the actions in the list and execute them
		for (int i=0; i<actions.size(); i++) {
			Action nextAction = (Action) actions.get(i);
			nextAction.execute();
		}
	}

}
