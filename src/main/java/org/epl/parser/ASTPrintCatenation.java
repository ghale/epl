package org.epl.parser;

/* Generated By:JJTree: Do not edit this line. ASTPrintCatenation.java */

/**
 * Represents the PrintCatenation production in the EPL grammar.
 * 
 * <pre>
 * PrintCatenation ::= {@link ASTPrintExpr PrintExpr} [ ( "+" {@link ASTPrintExpr PrintExpr} )+ ]

 * </pre>
 * @see ASTPrintExpr
 */
public class ASTPrintCatenation extends SimpleNode {
  public ASTPrintCatenation(int id) {
    super(id);
  }

  public ASTPrintCatenation(EplParser p, int id) {
    super(p, id);
  }

  /**
   * Interpret all the {@link ASTPrintExpr} child nodes as string values, and return the result 
   * @return all the concatenated results from child nodes
   */
  public String interpretAsString() {
    //super.interpret();	
    StringBuilder stringBuilder = new StringBuilder();

    // the PrintCatenation() production has one or more PrintExpr() children
    int i, k = jjtGetNumChildren();

    // interpret the children one by one
    for (i = 0; i < k; i++)
      //jjtGetChild(i).interpret();
    	stringBuilder.append(((ASTPrintExpr)jjtGetChild(i)).interpretAsString());
    
    return stringBuilder.toString();
  }

}
