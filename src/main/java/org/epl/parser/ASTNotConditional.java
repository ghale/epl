package org.epl.parser;

import java.util.HashSet;
/* Generated By:JJTree: Do not edit this line. ASTNotConditional.java */

import org.epl.core.Condition;

/**
 * Represents the NotConditional production in the EPL grammar.
 * <pre>
 * NotConditional ::= "not" {@link ASTExpr Expr}
 * </pre>  
 * 
 * @see ASTExpr
 */
public class ASTNotConditional extends SimpleNode implements Condition {
  public ASTNotConditional(int id) {
    super(id);
  }

  public ASTNotConditional(EplParser p, int id) {
    super(p, id);
  }

  
	
	public void interpret() {
		super.interpret();		
		jjtGetChild(0).interpret();
	}

	
	public Boolean isTriggered() {
		Boolean rhs = ((Condition)jjtGetChild(0)).isTriggered();
		return new Boolean(! rhs.booleanValue());
	}

	public HashSet<String> getEventSet() {
		// NotConditional has a single Expr() child
		HashSet<String> eventSet = new HashSet<String>();
		eventSet.addAll(((Condition)jjtGetChild(0)).getEventSet());
		return eventSet;
	}
}
