package org.epl.parser;
/* Generated By:JJTree: Do not edit this line. ASTParams.java */

import java.util.ArrayList;

/**
 * Represents the Params production in the EPL grammar.
 * <pre>
 * Params ::= ( {@link ASTParam Param} )+
 * </pre>
 * @see ASTParam
 */
public class ASTParams extends SimpleNode {
  public ASTParams(int id) {
    super(id);
  }

  public ASTParams(EplParser p, int id) {
    super(p, id);
  }
  /**
   * Interpret all the {@link ASTParam} child nodes as string values, and return the result 
   * @return the individual String values of each ASTParam child node
   */
  public ArrayList<String> interpretAsStrings() {    				
    // Params() consists of a number of Param() children
    // Each should evaluate to a string value
    // Gather them up into an ArrayList, which is returned to the parent
    ArrayList<String> params = new ArrayList<String>();
    int i, k = jjtGetNumChildren();
    
    for (i = 0; i < k; i++)
       params.add(((ASTParam)jjtGetChild(i)).interpretAsString());

    return params;
  }
}

